 //------------------------------------------------------------------------------
//  This file is auto-generated by BridgeGen.
//
//  Pattern: **Stable Interface Bridge**
//  ------------------------------------
//  The Stable Interface Bridge pattern combines three idioms:
//
//   • **Abstract Interface** — defines the pure virtual API contract (IWork)
//   • **Pimpl / Opaque Pointer** — hides concrete implementation details
//   • **Bridge (GoF)** — separates interface and implementation through indirection
//
//  In this design, the Bridge class (e.g. IWorkBridge):
//    - Owns a std::unique_ptr<IWork> that points to a polymorphic backend.
//    - Exposes **non-virtual** public functions that forward to IWork’s virtuals.
//    - Ensures ABI and vtable stability across module boundaries.
//    - Can be instantiated via an abstract factory (CreateIWorkBridge).
//
//  Example structure:
//
//      +-----------------+        +---------------------+
//      |  Client code    | -----> |  IWorkBridge (stable) |
//      +-----------------+        |  owns unique_ptr<IWork> |
//                                  +---------------------+
//                                                 |
//                                                 v
//                                        +-----------------+
//                                        |  IWork (abstract) |
//                                        +-----------------+
//                                                 |
//                                                 v
//                                        +-----------------+
//                                        |  Impl           |
//                                        +-----------------+
//
//  Benefits:
//    - Hides internal class layouts (compilation firewall)
//    - Keeps binary compatibility when internal classes change
//    - Allows independent evolution of the abstract interface and implementation
//
//  Notes:
//    - This file intentionally does not include the abstract interface header
//      in the .h file; only the .cpp includes it to preserve ABI isolation.
//    - Generated bridge functions are non-virtual and inline forwarders.
//------------------------------------------------------------------------------

#pragma once
#include <memory>

class IWork;

class IWorkBridge {
public:
    explicit IWorkBridge(std::unique_ptr<IWork>&& impl);
    IWorkBridge::~IWorkBridge();

    void DoWork() const;
private:
    std::unique_ptr<IWork> impl_;
};

// Factory constructor taking the real interface
std::unique_ptr<IWorkBridge> CreateIWorkBridge(std::unique_ptr<IWork>&& impl);
